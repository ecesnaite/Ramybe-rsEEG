---
title: "parietal_occipital_analysis"
format: html
editor: visual
---

## Data wrangling

#### Packages

```{r}
#| message: false
library(tidyverse)
library(ggpubr)
library(rstatix)
library(broom)
library(readxl)
```

#### Uploading the necessary data

```{r}
slope <-
  read_xlsx("slope_off_ch_groups.xlsx", sheet = "slope_each_ch_sbj")

iaf <-read_xlsx("iaf_power_ch_groups.xlsx", sheet = "iaf_each_ch_sbj_removed_subj" )

power <-read_xlsx("iaf_power_ch_groups.xlsx", sheet = "power_each_ch_sbj_removed_subj" )

demographic <-read_xlsx("id_age.xlsx")
```

#### Selecting electrodes

```{r}
slope <- slope |> select(id, group,Pz, P2, POz, PO4)
iaf <- iaf|> select(id, group,Pz, P2, POz, PO4)
power <- power |> select(id, group,Pz, P2, POz, PO4)
```

#### Removing subjects

```{r}
#remove subjects

# List of IDs to remove
ids_to_remove <- c(236, 32, 107, 113, 221, 13, 118, 122)

# Remove rows for the specified IDs in each dataset
slope <- slope[!(slope$id %in% ids_to_remove) & !(slope$group == "M"), ]
iaf <- iaf[!(iaf$id %in% ids_to_remove) & !(iaf$group == "M"), ]
power <- power[!(power$id %in% ids_to_remove) & !(power$group == "M"), ]

# Check if all datasets have equal number of rows
num_rows <- nrow(slope)
if (nrow(iaf) != num_rows || nrow(power) != num_rows) {
  print("Warning: Datasets do not have an equal number of rows.")
}
```

#### Calculating the average (mean) of occipital-parietal electrodes

```{r}
slope <- slope |> rowwise() |> 
  mutate(Occ_pariet = mean(c_across(Pz:PO4), na.rm = TRUE))

iaf <- iaf |> rowwise() |> 
  mutate(Occ_pariet = mean(c_across(Pz:PO4), na.rm = TRUE))

power <- power |> rowwise() |> 
  mutate(Occ_pariet = mean(c_across(Pz:PO4), na.rm = TRUE))
```

#### Combing demographic data

```{r}
slope <- merge(slope, demographic, by = "id", all.x = TRUE)
iaf <- merge(iaf, demographic, by = "id", all.x = TRUE)
power <- merge(power, demographic, by = "id", all.x = TRUE)
```

#### Group order

```{r}
slope <- slope |> mutate(group = factor(group, levels = c("NCF", "NCL", "OC", "IUD")))
iaf <- iaf|> mutate(group = factor(group, levels = c("NCF", "NCL", "OC", "IUD")))
power <- power |>  mutate(group = factor(group, levels = c("NCF", "NCL", "OC", "IUD")))
```

## Data analysis

### Slope

### 1. Assumption testing

**a. Quick visualization and outlines detection**

```{r}
ggplot(slope, aes(group, Occ_pariet))+
  geom_boxplot()
```

```{r}
slope |>  
  group_by(group) |> 
  identify_outliers(Occ_pariet)
```

**b. Linearity assumption**

```{r}
#| warning: false
ggscatter(
  slope, x = "age", y = "Occ_pariet",
  color = "group", add = "reg.line"
  ) +
  stat_regline_equation(
    aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = group)
    )
```

**c. Homogeneity of regression slopes**

```{r}
slope |>  anova_test(Occ_pariet ~ group*age)
```

**d. Normality testing (residuals)**

```{r}
model_slope <- lm(Occ_pariet ~ group + age, data = slope)
```

```{r}
plot(model_slope,2)
```

```{r}
shapiro_test(residuals(model_slope))
```

**d. Homogeneity of variance**

```{r}
slope |> levene_test(Occ_pariet ~ group)
```

### 2. Running ANOVA

```{r}
slope_aov <- slope |> anova_test(Occ_pariet ~ group + age)

slope_aov
```


### IAF

### 1. Assumption testing

**a. Quick visualization and outlines detection**

```{r}
ggplot(iaf, aes(group, Occ_pariet))+
  geom_boxplot()
```

```{r}
iaf |>  
  group_by(group) |> 
  identify_outliers(Occ_pariet) |> 
  select(is.extreme)
```

**b. Linearity assumption**

```{r}
#| warning: false
ggscatter(
  iaf, x = "age", y = "Occ_pariet",
  color = "group", add = "reg.line"
  ) +
  stat_regline_equation(
    aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = group)
    )
```

**c. Homogeneity of regression slopes**

```{r}
iaf %>% anova_test(Occ_pariet ~ group*age)
```

There is no significant interaction between age and group. And no relationship between age and iaf, therefore we can run simple ANOVA

**d. Normality testing (residuals)**

```{r}
model_iaf <- lm(Occ_pariet ~ group, data = iaf)
```

```{r}
plot(model_iaf,2)
```

```{r}
shapiro_test(residuals(model_iaf))
```

```{r}
iaf |> 
  group_by(group) |> 
  shapiro_test(Occ_pariet)
```

**d. Homogeneity of variance**

```{r}
iaf |> levene_test(Occ_pariet ~ group)
```

### 2. Running ANOVA

```{r}
iaf_aov <- iaf |> anova_test(Occ_pariet ~ group)

iaf_aov
```


### Alpa Power

```{r}
power$power_log <- log(power$Occ_pariet)
```

### 1. Assumption testing

**a. Quick visualization and outlines detection**

```{r}
ggplot(power, aes(group, power_log))+
  geom_boxplot()
```

```{r}
power |>  
  group_by(group) |> 
  identify_outliers(power_log) |> 
  select(is.extreme)
```

**b. Linearity assumption**

```{r}
#| warning: false
ggscatter(
  power, x = "age", y = "power_log",
  color = "group", add = "reg.line"
  ) +
  stat_regline_equation(
    aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = group)
    )
```

**c. Homogeneity of regression slopes**

```{r}
power |>  anova_test(power_log ~ group*age)
```

There is no significant interaction between age and group. And no relationship between age and power_log, therefore we can run simple ANOVA

**d. Normality testing (residuals)**

```{r}
model_power <- lm(power_log ~ group, data = power)
```

```{r}
plot(model_power,2)
```

```{r}
shapiro_test(residuals(model_power))
```

```{r}
power |> 
  group_by(group) |> 
  shapiro_test(power_log)
```

**d. Homogeneity of variance**

```{r}
power |> levene_test(power_log ~ group)
```

### 2. Running ANOVA

```{r}
power_aov <- power |> anova_test(power_log ~ group + age)

power_aov
```


