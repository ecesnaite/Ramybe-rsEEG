---
title: "lm_groups"
format: html
editor: visual
---

**Packages**

```{r}
#| message: false
library(tidyverse)
library(ggpubr)
library(rstatix)
library(broom)
library(readxl)
library(corrr)
library(corrplot)
library(PerformanceAnalytics)
```

**Uploading data**

```{r}
slope <-  
   read_xlsx("", sheet = "")

iaf <-read_xlsx("", sheet = "" )

power <-read_xlsx("", sheet = "" )

demographic <-read_xlsx("")
```

## Linear regression

```{r}
outlier_detection <- function(corr_data, alpha = 0.001) {
  cov_matrix <- cov(corr_data)
  mahalanobis_dist <- mahalanobis(corr_data, colMeans(corr_data), cov_matrix)
  critical_value <- qchisq(1 - alpha, df = ncol(corr_data))
  outliers <- which(mahalanobis_dist > critical_value)
  return(list(outliers = outliers, coordinates = corr_data[outliers, ]))
}
```

```{r}
outlier_result <- outlier_detection(corr_data[, c("median_slope", "median_iaf", "log_power", "Estradiol", "log_progesterone", "Testosterone")])
outlier_indices <- outlier_result$outliers
outlier_coordinates <- outlier_result$coordinates

# Plotting scatter plots with outliers marked in red
par(mfrow = c(2, 3)) # To arrange plots in a 2x3 grid, change the numbers accordingly
for (col_name in c("median_slope", "median_iaf", "log_power", "Estradiol", "log_progesterone", "Testosterone")) {
  plot(corr_data[[col_name]], col = ifelse(seq_along(corr_data[[col_name]]) %in% outlier_indices, "red", "blue"), pch = 16, main = col_name)
}
```

No outliers detected

**Dummie**

```{r}
data_dummies <- cbind(Joint_df, model.matrix(~ group - 1, Joint_df))
```

**Simple linear regression models**

```{r}
model_IAF <- lm(median_iaf ~ log_progesterone + Estradiol + Testosterone + groupIUD + groupOC+groupNCL + groupNCF, data = data_dummies)
summary(model_IAF)

```

```{r}
model_power <- lm(log_power ~ log_progesterone + Estradiol + Testosterone + groupIUD + groupOC+groupNCL + groupNCF, data = data_dummies)
summary(model_power)
```

```{r}
model_slope <- lm(median_slope ~ log_progesterone + Estradiol + Testosterone + groupIUD + groupOC+groupNCL + groupNCF, data = data_dummies)
summary(model_slope)
```
